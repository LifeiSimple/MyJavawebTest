<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Mybatis.mapper.StudentMapper">
    <select id="selectStudentAll" resultType="student">
        select *
        from student
    </select>
    <select id="getStudentBySid" resultType="Mybatis.entity.Student">
        select *
        from student
        where sid = #{sid}
    </select>

    <select id="getTeacherByTid" resultMap="asTeacher">
        SELECT student.sid,
               student.NAME AS '学生名字',
               student.sex  AS '学生性别',
               teacher.name AS '老师名字',
               teacher.tid,
               teacher.sex  AS '老师性别'
        FROM teach,
             teacher,
             student
        WHERE teach.tid = teacher.tid
          AND teach.sid = student.sid
          AND teacher.tid = #{tid};
    </select>
    <resultMap id="asTeacher" type="Teacher">
        <id column="tid" property="tid"/>
        <result column="老师名字" property="name"/>
        <result column="老师性别" property="sex"/>
        <collection property="studentList" ofType="Student">
            <id property="sid" column="sid"/>
            <result column="学生名字" property="name"/>
            <result column="学生性别" property="sex"/>
        </collection>
    </resultMap>

    <select id="selectStudentByTeacherID" resultMap="asStudent">
        SELECT student.sid,
               student.name,
               student.sex,
               teacher.name AS tname,
               teacher.tid,
               teacher.sex  AS tsex
        FROM teach,
             teacher,
             student
        WHERE teach.tid = teacher.tid
          AND teach.sid = student.sid
          AND teacher.tid = #{tid};
    </select>
    <resultMap id="asStudent" type="Student">
        <id column="id" property="sid"/>
        <result column="name" property="name"/>
        <result column="sex" property="sex"/>
        <collection property="teacher" ofType="Teacher">
            <id column="tid" property="tid"/>
            <result column="tname" property="name"/>
            <result column="tsex" property="sex"/>
        </collection>
    </resultMap>

    <insert id="addStudent" useGeneratedKeys="true" keyProperty="sid">
        insert into student(name, sex)
        values (#{name}, #{sex})
    </insert>
    <delete id="delStudent">
        delete
        from student
        where sid = #{sid};
    </delete>
    <delete id="delStudents">
        delete from student
        where sid in
        <foreach collection="array" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>;

    </delete>
    <update id="updateStudent">
        update student
        set name = #{name},
            sex  = #{sex}
        where sid = #{sid}
    </update>
    <update id="updateStudentDynamic">
        update student
        <set>
            <if test=" name != null and name !='' ">
                name = #{name},
            </if>
            <if test=" sex != null and sex !='' ">
                sex = #{sex},
            </if>
        </set>
        where sid = #{sid}
    </update>

    <select id="selectStudentByCondition" resultType="student">
        SELECT
        student.sid,
        student.name,
        student.sex
        FROM
        student
        <where>
            <if test="arg0 != 0">
                AND student.sid = #{arg0}
            </if>
            <if test="arg1!=''">
                AND student.name LIKE #{arg1}
            </if>
            <if test="arg2 !='' ">
                AND student.sex = #{arg2}
            </if>
        </where>
    </select>
    <select id="selectStudentByConditisonDynamic" resultType="Mybatis.entity.Student">
        SELECT
        student.sid,
        student.name,
        student.sex
        FROM
        student
        <where>
            <if test="sid != null">
                AND student.sid = #{sid}
            </if>
            <if test="name != null and name != '' ">
                AND student.name LIKE #{name}
            </if>
            <if test="sex != null and sex != '' ">
                AND student.sex = #{sex}
            </if>
        </where>
    </select>
    <select id="selectStudentByConditisonSingle" resultType="Mybatis.entity.Student">
        SELECT
        student.sid,
        student.name,
        student.sex
        FROM
        student
        <where>
            <choose>
                <when test="sid != null">
                    student.sid = #{sid}
                </when>
                <when test="name != null and name != '' ">
                    student.name LIKE #{name}
                </when>
                <when test="sex != null and sex != '' ">
                    student.sex = #{sex}
                </when>
            </choose>
        </where>
    </select>
</mapper>